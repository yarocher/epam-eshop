DROP TABLE IF EXISTS order_item;
DROP TABLE IF EXISTS `order`;
DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS product;

CREATE TABLE IF NOT EXISTS product (
	id INT PRIMARY KEY AUTO_INCREMENT,
	name VARCHAR (255) NOT NULL,
	category VARCHAR (255), 
	description VARCHAR (2000),
	amount INT NOT NULL DEFAULT 0 CHECK (amount >= 0),
	state VARCHAR (7) NOT NULL DEFAULT 'ON_SALE' CHECK (state IN ('ON_SALE', 'HIDDEN')),
	price DECIMAL (12, 2) NOT NULL CHECK (price >= 0),
	date_created DATETIME DEFAULT CURRENT_TIMESTAMP,	
	date_modified DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS user (
	id INT PRIMARY KEY AUTO_INCREMENT,
	login VARCHAR (100) UNIQUE NOT NULL,
	password VARCHAR (100) NOT NULL,
	state VARCHAR (7) NOT NULL DEFAULT 'ACTIVE' CHECK (state IN ('ACTIVE', 'BLOCKED')),
	role VARCHAR (10) NOT NULL DEFAULT 'CUSTOMER' CHECK (role IN ('CUSTOMER', 'ADMIN'))
);
CREATE TABLE IF NOT EXISTS `order` (
	id INT PRIMARY KEY AUTO_INCREMENT,
	user_id INT,
	date_created DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,	
	date_modified DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,	
	state VARCHAR (9) NOT NULL DEFAULT 'NEW' CHECK (state IN ('NEW', 'PAYED', 'CANCELLED')),
	FOREIGN KEY (user_id) REFERENCES user(id) ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS order_item (
	order_id INT,
	product_id INT,
	amount INT NOT NULL DEFAULT 1 CHECK (amount > 0),
	FOREIGN KEY (order_id) REFERENCES `order`(id) ON DELETE CASCADE,
	FOREIGN KEY (product_id) REFERENCES product(id) ON DELETE CASCADE,
	PRIMARY KEY (order_id, product_id)
);
